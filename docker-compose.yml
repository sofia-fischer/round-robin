services:

  # Web Server Service
  # ngnix used as reverse proxy, a standard for php to increase performance
  # ngnix will receive the request and forward it to the php application
  nginx:
    image: nginx:alpine
    ports:
      # this is the port that will be exposed to the host machine
      - "8080:80"
    volumes:
      # mount the project root into the container
      - ./public/:/var/www/public/
      # mount the nginx configuration file
      - ./deployment/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - application

  # Database Service
  postgres:
    platform: linux/x86_64
    image: postgres:16
    restart: unless-stopped
    volumes:
      - database:/var/lib/database
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'

  # Test Database Service
  postgres_test:
    platform: linux/x86_64
    image: postgres:16
    restart: unless-stopped
    volumes:
      - database:/var/lib/test_database
    ports:
      - "3333:5432"
    environment:
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'

  # PHP Service
  application:
    build:
      context: ./deployment/docker
      dockerfile: Dockerfile
    volumes:
      # mount the project root into the container
      # by mounting it as volume, changes will be reflected immediately
      - ./:/var/www
    depends_on:
      - postgres

  #  Redis (Queue) Service
  redis:
    image: 'redis:alpine'
    ports:
      - '${FORWARD_REDIS_PORT:-6379}:6379'

volumes:
  database:
    driver: local
